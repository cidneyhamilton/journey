GruffTemplate
=============

A typical use of Gruff Graphs in Ruby on Rails is to write some code in your
controller to generate a graph and render the output to the client.  This
works, but it is not clean and breaks the seperation between controller and
view.

An alternative approach is to expose a Gruff controller that can produce 
arbitrary graphs.  This is a potential security hole as users could request
graphs that you had no intention of serving.  With Gruff Template, you have
controll over the graphs you serve, because it treats graphs like any other
view on your data.

Gruff Template is a simple template handler that takes in a YAML file and 
outputs a PNG image of the graph it describes.  To add a graph view to an 
existing action, all you have to do is create a YAML file called  
"<action>.png.gruff" in your controller's views directory.  If you have the
"/:controller/:action/:id.:format" route set up (it is by default), then
you're done.

The "gruff" template file is run through the ERB template handler first, so
you can use ERB in the file (see example below).

When you go to /controller/action/id.png, you will get a rendered graph
generated by the YAML file that you write (see below for examples).

Tests
=====

There are no unit tests yet.  I may add them later.


Example
=======

Here's an example "gruff" view that generates a line graph:

type: Line
width: 500
title: Trends in Fast Food
font: <path_to_your_favorite_font>
theme: keynote
data:
  - name: fries
    color: red
    values: 
      - 1
      - 10
      - 30
      - 55
  - name: hamburgers
    color: blue
    values:
      - 1
      - 2
      - 3
      - 5
      - 6
      - 10






Here's another that generates a bar graph using some data from the controller
and ERB to generate the YAML:

type: Bar
width: 500
title: <%= exam_heading_text(@exam) %> 
font: /usr/share/fonts/truetype/ttf-bitstream-vera/Vera.ttf
labels:
  0: Concepts
  1: Operations
  2: Problem Solving
  3: Overall

y_axis_label: Percent Correct
hide_legend: true
minimum_value: 0
maximum_value: 100
theme: greyscale
<%
  data = @exam.percent_by_categories
  data << @exam.grade * 100
-%>
data: 
  name: :scores
  color: "#FFCC66"
  values: 
<%= data.map { |x| "    - " + x.to_s}.join("\n") %>







Alternatively, you can use Ruby to generate all the YAML for you:

<%
 graph = {'type' => 'Bar', 
          'width' => 500, 
          'title' => 'My Graph', 
          'font' => 'Vera.ttf', 
          'labels' => {0,"First",1,"Second",2,"Third"}, 
          'data' => {'name' => 'scores', 'values' => [30,40,50]}
         }
-%>

<%= graph.to_yaml %>
          

Copyright (c) 2008 Jared Luxenberg [http://www.jaredlux.com/projects], released under the MIT license
